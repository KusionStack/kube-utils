# Reference from:
# https://github.com/c-bata/go-prompt/blob/master/.github/workflows/test.yml
name: Check
on:
  pull_request:
    branches:
      - main
      - release-*
  push:
    branches:
      - main
      - release-*

env:
  GO_VERSION: '1.23'

jobs:

  Test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache-dependency-path: "**/*.sum"
      - name: Run Unit Tests
        run: |
          make test
          git status

  GolangLint:
    name: Golang Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache-dependency-path: "**/*.sum"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v2.0.2
          args: --timeout=30m

  LicenseCheck:
    name: License Check
    runs-on: ubuntu-latest
    env:
      TERM: xterm
    steps:
      - uses: actions/checkout@v4
      - uses: apache/skywalking-eyes@main

  # The TruffleHog OSS Github Action can be used to scan a range of commits for leaked credentials. The action will fail if any results are found.
  # More see: https://github.com/marketplace/actions/trufflehog-oss
  SecretScan:
    if: ${{ github.ref != 'refs/heads/main' }}
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --json
